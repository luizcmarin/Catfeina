# .github/workflows/build.yml

name: KMP CI & Build

permissions:
  contents: read

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Este job roda em Linux para testar e construir Android, Desktop (Linux) e Web.
  build-and-check-linux:
    name: "Build KMP Artifacts"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java (JDK 21)
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      # Adiciona cache para acelerar os builds futuros
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run checks and tests for all modules
        run: ./gradlew check

      - name: Build Android App (Debug)
        run: ./gradlew :androidApp:assembleDebug

      - name: Build Desktop App
        run: ./gradlew :desktopApp:package

      - name: Build Desktop App (Linux)
        run: ./gradlew :desktopApp:package

      - name: Build Web App
        run: ./gradlew :webApp:jsBrowserDistribution

      - name: Upload Android App (APK)
        uses: actions/upload-artifact@v4
        with:
          name: Catfeina-android-debug
          path: androidApp/build/outputs/apk/debug/androidApp-debug.apk

      - name: Upload Desktop App (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: Catfeina-desktop-linux
          path: desktopApp/build/compose/binaries/

      - name: Upload Web App
        uses: actions/upload-artifact@v4
        with:
          name: Catfeina-web
          path: webApp/build/dist/js/productionExecutable/

  # Este job roda em macOS para testar e construir os artefatos de iOS.
  build-and-check-macos:
    name: "Build & Test (macOS/iOS)"
    runs-on: macos-latest # USA O AMBIENTE MACOS
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java (JDK 21)
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      # Adiciona cache para acelerar os builds futuros
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # O 'check' executa todos os testes, incluindo os de iOS (iosTest)
      - name: Run all checks and tests (macOS/iOS)
        run: ./gradlew check

      # CONSTRÃ“I O FRAMEWORK DO IOS
      - name: Build iOS Framework
        run: ./gradlew :shared:linkDebugFrameworkIos

      # ENVIA O FRAMEWORK DO IOS COMO ARTEFATO
      - name: Upload iOS Framework
        uses: actions/upload-artifact@v4
        with:
          name: Catfeina-ios-framework
          path: shared/build/bin/ios*/*Framework/